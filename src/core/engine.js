// Generated by CoffeeScript 1.7.1
var Engine, EventEmitter, debug, type,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

type = require('../utils/type');

debug = require('../debug/debug');

EventEmitter = require('./event');

Engine = (function(_super) {
  __extends(Engine, _super);

  Engine.Component = function(obj) {
    if (!type.of.object(obj)) {
      debug.error('component pattern must be an object');
      return;
    }
    if (!'name' in obj || !'initialize' in obj) {
      debug.error('you must define both "name" and "initialize" of component pattern');
    }
  };

  function Engine() {
    this.componetsPool = [];
  }

  return Engine;

})(EventEmitter);

module.exports = Engine;
